---
title: "T1 Retry"
format: html
editor: visual
---

You can add options to executable code like this

```{r}
library(tidyverse)
library(sf)
library(DBI)
library(here)
library(leaflet)
library(maptiles)
library(tidyterra)
library(knitr)
library(tigris)
library (RSQLite)

sf::sf_use_s2(FALSE)
```

```{r}
TAZs <- here("inputs",
             "zonal",
             "shp",
             "CTPS_TDM23_TAZ_2017g_v202303.shp") |>
  st_read(quiet = TRUE) |>
  st_transform("WGS84")

base_map <- get_tiles(TAZs,
                      provider = "CartoDB.Positron",
                      zoom = 8,
                      crop = TRUE)

ggplot(TAZs) +
  geom_spatraster_rgb(data = base_map) +
  geom_sf(fill = NA,
          color = "orange") +
  theme_void()
```

```{r}
somermed_TAZs <- TAZs |>
  filter(town %in% c("SOMERVILLE", "MEDFORD"))


leaflet(somermed_TAZs) |>
  addProviderTiles(provider = "CartoDB.Positron") |>
  addPolygons(weight = 2,
              color = "orange",
              fillColor = "orange",
              fillOpacity = 0.1,
              highlightOptions = highlightOptions(weight = 3,
                                                  fillOpacity = 0.5),
              label = somermed_TAZs$taz_id)
```

```{r}
somermed_blocks <- blocks(state = "MA", 
                          county = "Middlesex", 
                          year = 2010,
                          progress_bar = FALSE) |>
  st_transform("WGS84") |>
  st_filter(somermed_TAZs)

leaflet(somermed_blocks) |>
  addProviderTiles(provider = "CartoDB.Positron") |>
  addPolygons(weight = 2,
              color = "forestgreen",
              fillColor = "forestgreen",
              fillOpacity = 0.1,
              highlightOptions = highlightOptions(weight = 3,
                                                  fillOpacity = 0.5),
              label = somermed_blocks$GEOID10)
```

```{r}
vehs_dif <- read_csv("vehs_changed_blocks.csv") %>%
  mutate(GEOID10 = as.character(GEOID10))
```

```{r}
all_blocks <- blocks(state = "MA", year = 2010, progress_bar = FALSE) %>%
  st_transform("WGS84")
```

```{r}
blocks_merged <- all_blocks %>%
  left_join(vehs_dif, by = "GEOID10") %>%
  mutate(net_change = n_gained_veh - n_lost_veh,
         change_type = case_when(
           net_change > 0 ~ "Increase",
           net_change < 0 ~ "Decrease",
           TRUE         ~ "No Change"
         ))

blocks_filtered <- blocks_merged %>% 
  filter(net_change != 0)
```

```{r}
pal <- colorFactor(
  palette = c("Decrease" = "red", "Increase" = "green"),
  domain = blocks_filtered$change_type
)

leaflet(blocks_filtered) %>%
  addProviderTiles("CartoDB.Positron") %>%
  addPolygons(weight = 1,
              color = "black",
              fillColor = ~pal(change_type),
              fillOpacity = 0.7,
              highlightOptions = highlightOptions(weight = 3, fillOpacity = 0.5),
              label = ~paste0("<strong>GEOID:</strong> ", GEOID10, "<br>",
                              "<strong>Households:</strong> ", n_hhs, "<br>",
                              "<strong>Gained:</strong> ", n_gained_veh, "<br>",
                              "<strong>Lost:</strong> ", n_lost_veh, "<br>",
                              "<strong>Net Change:</strong> ", net_change)) %>%
  addLegend("bottomright",
            pal = pal,
            values = ~change_type,
            title = "Vehicle Change",
            opacity = 1)
```

```{r}
mbta_arc <- st_read("inputs/mbta_rapid_transit/MBTA_ARC.shp", quiet = TRUE) %>% 
  st_transform("WGS84")

```

```{r}
mbta_arc_green <- mbta_arc %>% filter(LINE == "GREEN")

```

```{r}
m1 <- leaflet() %>%
  addProviderTiles("CartoDB.Positron") %>%
  
  addPolygons(data = blocks_filtered,
              weight = 1,
              color = "black",
              fillColor = ~pal(change_type),
              fillOpacity = 0.7,
              highlightOptions = highlightOptions(weight = 3, fillOpacity = 0.5),
              label = ~paste0("<strong>GEOID:</strong> ", GEOID10, "<br>",
                              "<strong>Households:</strong> ", n_hhs, "<br>",
                              "<strong>Gained:</strong> ", n_gained_veh, "<br>",
                              "<strong>Lost:</strong> ", n_lost_veh, "<br>",
                              "<strong>Net Change:</strong> ", net_change),
              group = "Blocks") %>%
  
  addPolylines(data = mbta_arc_green,
               color = "green",  
               weight = 2,
               opacity = 1,
               group = "MBTA Green Arcs") %>%
  

  addLegend("bottomright",
            pal = pal,
            values = blocks_filtered$change_type,
            title = "Vehicle Change",
            opacity = 1)


m1
```

```{r}
vehs_dif_summary <- vehs_dif %>% 
  summarize(across(where(is.numeric), ~ sum(.x, na.rm = TRUE)))

vehs_dif_summary
```

```{r}
mbta_arc_orange <- mbta_arc %>% filter(LINE == "ORANGE")
mbta_arc_green  <- mbta_arc %>% filter(LINE == "GREEN")
mbta_arc_red    <- mbta_arc %>% filter(LINE == "RED")
```

```{r}
m2 <- leaflet() %>%
  addProviderTiles("CartoDB.Positron") %>%
  
  addPolygons(data = blocks_filtered,
              weight = 1,
              color = "black",
              fillColor = ~pal(change_type),
              fillOpacity = 0.7,
              highlightOptions = highlightOptions(weight = 3, fillOpacity = 0.5),
              label = ~paste0("<strong>GEOID:</strong> ", GEOID10, "<br>",
                              "<strong>Households:</strong> ", n_hhs, "<br>",
                              "<strong>Gained:</strong> ", n_gained_veh, "<br>",
                              "<strong>Lost:</strong> ", n_lost_veh, "<br>",
                              "<strong>Net Change:</strong> ", net_change),
              group = "Blocks") %>%

  addPolylines(data = mbta_arc_orange,
               color = "orange",
               weight = 2,
               opacity = 1,
               group = "ORANGE Lines") %>%

  addPolylines(data = mbta_arc_green,
               color = "green",
               weight = 2,
               opacity = 1,
               group = "GREEN Lines") %>%

  addPolylines(data = mbta_arc_red,
               color = "red",
               weight = 2,
               opacity = 1,
               group = "RED Lines") %>%
  
  addLegend("bottomright",
            pal = pal,
            values = blocks_filtered$change_type,
            title = "Vehicle Change",
            opacity = 1)

m2
```

```{r}
m3 <- leaflet() %>%
  addProviderTiles("CartoDB.Positron") %>%
  
  addPolygons(data = blocks_filtered,
              weight = 1,
              color = "black",
              fillColor = ~pal(change_type),
              fillOpacity = 0.7,
              highlightOptions = highlightOptions(weight = 3, fillOpacity = 0.5),
              label = ~paste0("<strong>GEOID:</strong> ", GEOID10, "<br>",
                              "<strong>Households:</strong> ", n_hhs, "<br>",
                              "<strong>Gained:</strong> ", n_gained_veh, "<br>",
                              "<strong>Lost:</strong> ", n_lost_veh, "<br>",
                              "<strong>Net Change:</strong> ", net_change),
              group = "Blocks") %>%

  addPolylines(data = mbta_arc_orange,
               color = "orange",
               weight = 2,
               opacity = 1,
               group = "ORANGE Lines") %>%

  addPolylines(data = mbta_arc_red,
               color = "red",
               weight = 2,
               opacity = 1,
               group = "RED Lines") %>%
      
  addLegend("bottomright",
            pal = pal,
            values = blocks_filtered$change_type,
            title = "Vehicle Change",
            opacity = 1) 

m3
```

```{r}
vehs_dif_summary <- vehs_dif %>% 
  summarize(across(where(is.numeric), ~ sum(.x, na.rm = TRUE)))
```
